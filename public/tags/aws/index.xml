<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aws on Agus Fahmi Aji Pramana&#39;s Blogging Site</title>
    <link>http://localhost:1313/tags/aws/</link>
    <description>Recent content in Aws on Agus Fahmi Aji Pramana&#39;s Blogging Site</description>
    <image>
      <title>Agus Fahmi Aji Pramana&#39;s Blogging Site</title>
      <url>http://localhost:1313/logo.svg</url>
      <link>http://localhost:1313/logo.svg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 04 Nov 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mission 1 Challenge - Intensive Cloud Training</title>
      <link>http://localhost:1313/blogs/training/intensive-cloud-training/mission-1-challenge/</link>
      <pubDate>Tue, 17 Oct 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/training/intensive-cloud-training/mission-1-challenge/</guid>
      <description>Learning and Outcome from Mission 1 Challenge</description>
      <content:encoded><![CDATA[<h2 id="mission-introduction">Mission Introduction</h2>
<p>In this mission, I have to setup free tier of AWS and Google Cloud Account. Multi-Cloud is when any organization uses different cloud service providers to successfully run an application. It is also referred as a strategy of using the best services from two or more Cloud providers.</p>
<h3 id="inside">Inside</h3>
<ul>
<li>Manager IAM user to provide programmatic access to Terraform user.</li>
<li>We use Terraform (IaC) to provision Google Cloud SQL, GKE Cluster and AWS S3 Bucket using Google CloudShell.</li>
</ul>
<h2 id="join-community">Join Community</h2>
<p>
  
  <input type="checkbox" id="zoomCheck-5ca57" hidden />
  <label for="zoomCheck-5ca57">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/introduce.webp"
      alt="Introduce in Community"
       />
  </label>
</p>
<h2 id="aws-and-google-cloud-account-setup">AWS and Google Cloud Account Setup</h2>
<h3 id="aws">AWS</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-17cb4" hidden />
  <label for="zoomCheck-17cb4">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/aws-account.webp"
      alt="AWS account"
       />
  </label>
</p>
<h3 id="google-cloud">Google Cloud</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-0fb67" hidden />
  <label for="zoomCheck-0fb67">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/google-cloud-account.webp"
      alt="Google Cloud account"
       />
  </label>
</p>
<h4 id="free-trail">Free Trail</h4>
<p>
  
  <input type="checkbox" id="zoomCheck-c1fea" hidden />
  <label for="zoomCheck-c1fea">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/google-cloud-account-console.webp"
      alt="Google Cloud Free Trail account"
       />
  </label>
</p>
<h2 id="begin-hands-on-project">Begin Hands-on Project</h2>
<h3 id="setting-up-terraform-user-in-aws-iam">Setting up Terraform user in AWS IAM</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-b45f9" hidden />
  <label for="zoomCheck-b45f9">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/iam-user.webp"
      alt="IAM User Setup"
       />
  </label>
</p>
<h3 id="running-commands-in-google-cloudshell">Running commands in Google CloudShell</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-7ecee" hidden />
  <label for="zoomCheck-7ecee">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/google-cloudshell.webp"
      alt="Running commands in Google CloudShell"
       />
  </label>
</p>
<h3 id="initializing-terraform">Initializing Terraform</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-e2897" hidden />
  <label for="zoomCheck-e2897">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/terraform-init.webp"
      alt="Google Console Initialize Terraform"
       />
  </label>
</p>
<h3 id="aws-s3-bucket-setup-via-terraform">AWS S3 Bucket Setup via. Terraform</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-31282" hidden />
  <label for="zoomCheck-31282">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/s3-bucket.webp"
      alt="AWS S3 Bucket Setup"
       />
  </label>
</p>
<h3 id="google-sql-and-kubernetes-cluster-setup-via-terraform">Google SQL and Kubernetes Cluster Setup via. Terraform</h3>
<h4 id="sql">SQL</h4>
<p>
  
  <input type="checkbox" id="zoomCheck-6ca38" hidden />
  <label for="zoomCheck-6ca38">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/sql-instance.webp"
      alt="SQL Instance"
       />
  </label>
</p>
<h4 id="kubernetes-cluster">Kubernetes Cluster</h4>
<p>
  
  <input type="checkbox" id="zoomCheck-b320b" hidden />
  <label for="zoomCheck-b320b">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/kubernetes-cluster.webp"
      alt="Kubernetes Cluster"
       />
  </label>
</p>
<h3 id="sql-network-configuration">SQL Network Configuration</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-4dd5c" hidden />
  <label for="zoomCheck-4dd5c">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/sql-network-configuration.webp"
      alt="SQL Network Configuration"
       />
  </label>
</p>
<h2 id="mission-accomplished">Mission Accomplished</h2>
<h3 id="sql-instance">SQL Instance</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-c3d60" hidden />
  <label for="zoomCheck-c3d60">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/sql-complete-setup.webp"
      alt="SQL Instance Up and Running"
       />
  </label>
</p>
<h3 id="kubernetes">Kubernetes</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-c4627" hidden />
  <label for="zoomCheck-c4627">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/kubernetes-complete-setup.webp"
      alt="Kubernetes Complete Setup"
       />
  </label>
</p>
<h2 id="linkedin-post">LinkedIn Post</h2>
<p>
  
  <input type="checkbox" id="zoomCheck-b1371" hidden />
  <label for="zoomCheck-b1371">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/linkedin-post.webp"
      alt="LinkedIn Post"
       />
  </label>
</p>
<h2 id="invite-to-the-cloud-bootcamp">Invite to The Cloud Bootcamp</h2>
<ul>
<li><a href="https://e.thecloudbootcamp.com/d8z5zO">https://e.thecloudbootcamp.com/d8z5zO</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Mission 2 Challenge - Intensive Cloud Training</title>
      <link>http://localhost:1313/blogs/training/intensive-cloud-training/mission-2-challenge/</link>
      <pubDate>Wed, 18 Oct 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/training/intensive-cloud-training/mission-2-challenge/</guid>
      <description>Learning and Outcome from Mission 2 Challenge</description>
      <content:encoded><![CDATA[<h2 id="mission-introduction">Mission Introduction</h2>
<p>In this mission, I have my Google Cloud SQL instance and Google Kubernetes Engine Cluster up and running from the previous Mission 1. Going further, I&rsquo;ll have to setup MySQL database, deploy image of application to Google Container Registry, deploy the app in cluster as GKE Workload. The main goal is deploy an app and make it publicly accessible.</p>
<h3 id="inside">Inside</h3>
<ul>
<li>Manager IAM user to provide programmatic access to AWS S3 Bucket from Google Kubernetes Cluster app.</li>
<li>Manually setup user in SQL Cloud, create database and table which will be used by the application.</li>
<li>Build and upload the docker image in GCR (Google Container Registry).</li>
<li>Connect the previous made application cluster to Google Cloud Container cluster.</li>
<li>Apply the application Kubernetes configuration to run upload GCR image in a cluster</li>
<li>Once, the app is up and running we use the public IP address to access the application.</li>
</ul>
<h2 id="begin-hands-on-project">Begin Hands-on Project</h2>
<h3 id="user-creation-for-kubernetes-cluster-app-to-connect-s3">User creation for Kubernetes cluster app to connect S3</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-1c2de" hidden />
  <label for="zoomCheck-1c2de">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/system-user.webp"
      alt="System User Creation"
       />
  </label>
</p>
<h3 id="create-user-to-access-sql-instance">Create user to access SQL Instance</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-492d7" hidden />
  <label for="zoomCheck-492d7">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/sql-user.webp"
      alt="SQL Instance user account"
       />
  </label>
</p>
<h3 id="create-table-in-mysql-database">Create table in mysql database</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-ea05d" hidden />
  <label for="zoomCheck-ea05d">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/sql-db-setup.webp"
      alt="SQL DB Setup"
       />
  </label>
</p>
<h3 id="build-docker-image-and-push-it-to-gcr">Build Docker image and push it to GCR</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-c602d" hidden />
  <label for="zoomCheck-c602d">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/console-build.webp"
      alt="Successful Build"
       />
  </label>
</p>
<h3 id="container-registry-of-app">Container Registry of App</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-39c6d" hidden />
  <label for="zoomCheck-39c6d">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/container-registry-build.webp"
      alt="Container Registry Build"
       />
  </label>
</p>
<h3 id="connect-to-gke-cluster">Connect to GKE cluster</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-f97f0" hidden />
  <label for="zoomCheck-f97f0">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/connect-to-cluster.webp"
      alt="Connect luxxy cluster to GKE cluster"
       />
  </label>
</p>
<h2 id="mission-accomplished">Mission Accomplished</h2>
<h3 id="deployed-application-in-cluster-as-workload">Deployed application in Cluster as Workload</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-0528b" hidden />
  <label for="zoomCheck-0528b">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/kubernetes-workload.webp"
      alt="Kubernetes workloads"
       />
  </label>
</p>
<h3 id="browsing-the-application">Browsing the application</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-64e29" hidden />
  <label for="zoomCheck-64e29">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/running-server.webp"
      alt="Browsing the application"
       />
  </label>
</p>
<h2 id="invite-to-the-cloud-bootcamp">Invite to The Cloud Bootcamp</h2>
<ul>
<li><a href="https://e.thecloudbootcamp.com/d8z5zO">https://e.thecloudbootcamp.com/d8z5zO</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Mission 3 Challenge - Intensive Cloud Training</title>
      <link>http://localhost:1313/blogs/training/intensive-cloud-training/mission-3-challenge/</link>
      <pubDate>Thu, 19 Oct 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/training/intensive-cloud-training/mission-3-challenge/</guid>
      <description>Learning and Outcome from Mission 3 Challenge</description>
      <content:encoded><![CDATA[<h2 id="mission-introduction">Mission Introduction</h2>
<p>In this mission, we&rsquo;ll perform the database migration and files migration in Google Cloud SQL and AWS S3 respectively. After the migration process is done, we successfully finished all the mission from the trainings. Then we start to deprovision and delete all the resources to avoid charges in Cloud Services.</p>
<h3 id="inside">Inside</h3>
<ul>
<li>We migrate the SQL dump file data to Google Cloud SQL using Google Cloud Shell.</li>
<li>Then, we migrate the PDF files to S3 Bucket using AWS CloudShell.</li>
<li>Deprovision and delete all resource using Terraform.</li>
</ul>
<h2 id="begin-hands-on-project">Begin Hands-on Project</h2>
<h3 id="database-migration-to-google-cloud-sql-using-mysql-dump">Database migration to Google Cloud SQL using MySQL dump</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-5aa00" hidden />
  <label for="zoomCheck-5aa00">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/dump-mysql.webp"
      alt="Dump MySQL to Google CLoud"
       />
  </label>
</p>
<h3 id="pdf-files-migration-to-s3-bucket-using-aws-cloudshell">PDF Files Migration to S3 Bucket using AWS CloudShell</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-ac596" hidden />
  <label for="zoomCheck-ac596">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/aws-cloudshell-upload.webp"
      alt="AWS CloudShell PDF Uploads"
       />
  </label>
</p>
<h3 id="uploaded-files-in-aws-s3-bucket">Uploaded files in AWS S3 Bucket</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-e589b" hidden />
  <label for="zoomCheck-e589b">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/listing-aws-s3.webp"
      alt="Uploaded file in AWS S3 Bucket"
       />
  </label>
</p>
<h2 id="mission-accomplished">Mission Accomplished</h2>
<h3 id="navigating-records-in-application">Navigating records in Application</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-ac1ce" hidden />
  <label for="zoomCheck-ac1ce">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/navigating-records.webp"
      alt="Navigating records in App"
       />
  </label>
</p>
<h3 id="accessing-the-file-from-application">Accessing the file from Application</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-5efe8" hidden />
  <label for="zoomCheck-5efe8">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/accessing-file.webp"
      alt="Accessing the file from Application"
       />
  </label>
</p>
<h2 id="cleanup">Cleanup</h2>
<h3 id="disabling-deletion-protection-in-terraform-file">Disabling deletion protection in Terraform file</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-6c4a3" hidden />
  <label for="zoomCheck-6c4a3">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/cloud-editor.webp"
      alt="Updating configuration in Cloud Editor"
       />
  </label>
</p>
<h3 id="disabling-deletion-protection-in-tfstate">Disabling deletion protection in tfstate</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-5549d" hidden />
  <label for="zoomCheck-5549d">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/cloud-editor-changes.webp"
      alt="Updating tfstate in Cloud Editor"
       />
  </label>
</p>
<h3 id="deleted-resources">Deleted resources</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-061b6" hidden />
  <label for="zoomCheck-061b6">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/deleted-resources.webp"
      alt="Deleted resources"
       />
  </label>
</p>
<h2 id="certificate-of-completion">Certificate of Completion</h2>
<p>
  
  <input type="checkbox" id="zoomCheck-7e138" hidden />
  <label for="zoomCheck-7e138">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/certificate.webp"
      alt="Alt text"
       />
  </label>
</p>
]]></content:encoded>
    </item>
    <item>
      <title>Cloud Security Assessment using ScoutSuite, Pacu, and Prowler</title>
      <link>http://localhost:1313/blogs/cybersecurity/cloud-security-assessment-using-scoutsuite-pacu-prowler/</link>
      <pubDate>Sat, 04 Nov 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/cybersecurity/cloud-security-assessment-using-scoutsuite-pacu-prowler/</guid>
      <description>Perform Cloud Security Assessment, analyzing the report and providing recommendation.</description>
      <content:encoded><![CDATA[<h2 id="introduction">Introduction</h2>
<p>In this blog, I&rsquo;ll be showing how we can perform cloud security auditing and assessment using ScoutSuite, Pacu and Prowler, and analyzing the report generated by these tools. I will demonstrate the privilege escalation attack on misconfigured policy of AWS.</p>
<blockquote>
<p>Note: The AWS <code>access_key_id</code>, <code>access_secret_key</code> used in the screenshot will not work and was only created for this writing this blog. If you want to test it, please make sure you are authorized to perform the assessment in targeted cloud.</p></blockquote>
<h2 id="prerequisites">Prerequisites</h2>
<h3 id="configure-aws">Configure AWS</h3>
<p>Amazon Web Services (AWS) is cloud computing services which will be a target cloud infrastructure for the assessment. To perform this activity, I created AWS account from my own account. To continue follow the given instructions:</p>
<ul>
<li>
<p>Navigate to Identity Access Management (<code>IAM</code>) Service</p>
</li>
<li>
<p>Go to <strong>Users</strong> &gt; <strong>Create user</strong> to create a user named <code>kaliuser</code></p>
</li>
<li>
<p>Next, Go to <strong>User groups</strong> &gt; <strong>Create group</strong> to create a user group <code>testing</code>.</p>
<ul>
<li>Add the <code>kaliuser</code> in a group while creating.</li>
<li>Attach Policy <strong>SecurityAudit</strong> and <strong>SecurityAudit</strong> to providing permissions.</li>
</ul>
</li>
<li>
<p>Then, navigate to <strong>User</strong> &gt; <strong>kaliuser</strong> &gt; <strong>Security credentials</strong> &gt; <strong>Access keys</strong> &gt; <strong>Create access key</strong> &gt; Select <strong>Command Line Interface (CLI)</strong> &gt; <strong>Next</strong> &gt; <strong>Create access key</strong>. This will generate programmatic access key and secret key.</p>
</li>
<li>
<p>Finally, configure your shell running <code>aws configure</code>, enter the <code>access_key_id</code> and <code>access_secret_key</code> in the terminal.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ aws configure
</span></span><span class="line"><span class="cl">AWS Access Key ID <span class="o">[</span>****************TKIZ<span class="o">]</span>:
</span></span><span class="line"><span class="cl">AWS Secret Access Key <span class="o">[</span>****************/G0w<span class="o">]</span>:
</span></span><span class="line"><span class="cl">Default region name <span class="o">[</span>us-east-2<span class="o">]</span>:
</span></span><span class="line"><span class="cl">Default output format <span class="o">[</span>None<span class="o">]</span>:
</span></span></code></pre></div></li>
</ul>
<blockquote>
<p>Note: I will further configure additional Policy for <code>Pacu</code> in next section.</p></blockquote>
<p>
  
  <input type="checkbox" id="zoomCheck-26bc4" hidden />
  <label for="zoomCheck-26bc4">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/aws-setup.webp"
      alt="AWS Console Setup"
       />
  </label>
</p>
<h3 id="scoutsuite">ScoutSuite</h3>
<p><code>Scout Suite</code> is an open source multi-cloud security-auditing tool, which enables security posture assessment of cloud environments.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git clone git@github.com:nccgroup/ScoutSuite.git
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">virtualenv -p python3 venv <span class="c1"># Create virtual environment</span>
</span></span><span class="line"><span class="cl"><span class="nb">source</span> venv/bin/activate   <span class="c1"># Activate virtual environment in shell</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> ScoutSuite
</span></span><span class="line"><span class="cl">pip install                <span class="c1"># Install dependencies</span>
</span></span></code></pre></div><h3 id="setup-pacu">Setup Pacu</h3>
<p><code>Pacu</code> is an open-source AWS exploitation framework, designed for offensive security testing against cloud environments</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git clone git@github.com:RhinoSecurityLabs/pacu.git
</span></span><span class="line"><span class="cl"><span class="nb">source</span> venv/bin/activate   <span class="c1"># Activate virtual environment in shell</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> pacu
</span></span><span class="line"><span class="cl">./install.sh               <span class="c1"># Install Dependencies</span>
</span></span></code></pre></div><h3 id="setup-prowler">Setup Prowler</h3>
<p><code>Prowler</code> is an Open Source security tool to perform AWS, GCP and Azure security best practices assessments, audits, incident response, continuous monitoring, hardening and forensics readiness.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git clone git@github.com:prowler-cloud/prowler.git
</span></span><span class="line"><span class="cl"><span class="nb">source</span> venv/bin/activate   <span class="c1"># Activate virtual environment in shell</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> prowler
</span></span><span class="line"><span class="cl">pip install prowler <span class="c1"># Install prowler and its dependencies</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">./prowler.py aws -f us-east-2 -s <span class="o">{</span>s3,iam,cloudtrail,cloudwatch<span class="o">}</span> <span class="c1"># Running</span>
</span></span></code></pre></div><h2 id="scoutsuite-assessment">ScoutSuite Assessment</h2>
<p>Navigate to cloned folder, activate the environment and run the scout suite.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> ScoutSuite
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">python3 scout.py           <span class="c1"># Start auditing using scout.py</span>
</span></span></code></pre></div><p>Running Scout Suite will take some minutes to complete.</p>
<p>
  
  <input type="checkbox" id="zoomCheck-b5cf2" hidden />
  <label for="zoomCheck-b5cf2">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/scout-suite-cli.webp"
      alt="CLI Output of Scout Suite"
       />
  </label>

After completion, you&rsquo;ll see html file as an output stored inside <strong>scoutsuite-report</strong> folder. Go to the folder and open it in your browser.</p>
<p>
  
  <input type="checkbox" id="zoomCheck-3aef8" hidden />
  <label for="zoomCheck-3aef8">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/scout-suite-output.webp"
      alt="HTML file generated by Scout Suite"
       />
  </label>
</p>
<h3 id="cloudwatch-recommendation">Cloudwatch Recommendation</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-0a1b8" hidden />
  <label for="zoomCheck-0a1b8">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/cloud-watch-dashboard.webp"
      alt="Cloud Watch Dashboard Critical Configuration"
       />
  </label>
</p>
<p>Here, <code>CloudTrail is not configured</code> in dashboard signifies it is a crucial issue and vulnerability as AWS CloudTrail plays a critical role in monitoring and auditing AWS resources and API activities. Without it being configured, we will lack visibility into actions taken within AWS environment, making it difficult to detect and investigate security incidents.</p>
<p>To address this, we should create a CloudTrail trail to log events in all AWS Regions. This trail should deliver log files to an <code>Amazon S3</code> bucket which is storage service of AWS. As per the best practices documentation, we also need to enable CloudTrail log file integrity and integrate it with <code>Amazon CloudWatch</code> Logs for monitoring to make sure the file is not changed. Additionally, it is considered good practice to use AWS Security Hub to monitor CloudTrail resources.</p>
<h3 id="iam-recommendation">IAM Recommendation</h3>
<p>
  
  <input type="checkbox" id="zoomCheck-f5fdb" hidden />
  <label for="zoomCheck-f5fdb">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/iam-dashboard.webp"
      alt="Cloud Watch Dashboard Critical Configuration"
       />
  </label>
</p>
<p>In general, it shows two different types of vulnerabilities:</p>
<ul>
<li>
<p><strong>Password Policies</strong>: The vulnerabilities related to inadequate password length, expiration, and reuse signify a weak password policy in your AWS environment.</p>
<p><strong><em>To remediate these issues</em></strong>, we need to enforce stronger password policies that require longer passwords, implement regular password expiration intervals (e.g., 90 days), and disallow password reuse to enhance security.</p>
</li>
<li>
<p><strong>Root Account Security</strong>: The vulnerabilities regarding root account usage and the absence of <code>Multi-Factor Authentication (MFA)</code> highlight the need for securing the root AWS account.</p>
<p><strong><em>To address these issues</em></strong>, we need to ensure that IAM policies are attach only the users and groups, enable hardware-based MFA for the root account, and enforce MFA for all users accessing the AWS environment. Additionally, limit the use of the root account and establish individual IAM user accounts with appropriate permissions to reduce security risks associated with the root account.</p>
</li>
</ul>
<h2 id="pacu-exploitation">Pacu Exploitation</h2>
<p>In Pacu, I will try to escalate the privilege by using the tool command. To do this, I have to add custom policy referred as misconfigured customer managed policy. Practically, it is possible someone can add hazardous policy without knowing the consequences and human error or misconfiguration can happen. To do this follow these steps:</p>
<h3 id="adding-custom-policy">Adding custom policy</h3>
<ul>
<li>
<p>Navigate to Identity Access Management (<code>IAM</code>) Service</p>
</li>
<li>
<p>Go to <strong>Policies</strong> &gt; <strong>Create policy</strong> &gt; <strong>JSON</strong> to create new policy <code>PacuExploitPolicy</code>.</p>
</li>
<li>
<p>Copy and paste following lines in <strong>Policy Editor</strong> &gt; <strong>Next</strong> &gt; <strong>Create Policy</strong>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;Version&#34;</span><span class="p">:</span> <span class="s2">&#34;2012-10-17&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;Statement&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;Sid&#34;</span><span class="p">:</span> <span class="s2">&#34;VisualEditor1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;Effect&#34;</span><span class="p">:</span> <span class="s2">&#34;Allow&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;Action&#34;</span><span class="p">:</span> <span class="s2">&#34;s3:*&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;Resource&#34;</span><span class="p">:</span> <span class="s2">&#34;arn:aws:s3:::cybr-pacu-lab-example&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;Sid&#34;</span><span class="p">:</span> <span class="s2">&#34;Statement1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;Effect&#34;</span><span class="p">:</span> <span class="s2">&#34;Allow&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;Action&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;iam:Get*&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;iam:List*&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;iam:Put*&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;iam:AttachRolePolicy&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;iam:SimulateCustomPolicy&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;iam:SimulatePrincipalPolicy&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="p">],</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;Resource&#34;</span><span class="p">:</span> <span class="s2">&#34;*&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Source: <a href="https://www.youtube.com/watch?v=IbqjtqTeyr0">intro to AWS PENTESTING (with Pacu)</a></p>
</li>
<li>
<p>Next, attach the custom policy to the <code>testing</code> group or <code>kaliuser</code> user directly. I attached for user group.</p>
</li>
</ul>
<blockquote>
<p>Note: In the custom policy, <code>iam:Put*</code> is risky attribute which allow to add new Policies leading to escalate the policy. You&rsquo;ll see how that can be achieved in the next section.</p></blockquote>
<h3 id="running-pacu">Running Pacu</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> pacu
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">./cli.sh                   <span class="c1"># Start Pacu.</span>
</span></span></code></pre></div><h3 id="setting-up-aws-credentials">Setting up AWS credentials</h3>
<p>First, we need to setup the AWS keys using <code>set_keys</code> and <code>set_regions</code> command.</p>
<p>
  
  <input type="checkbox" id="zoomCheck-81ffa" hidden />
  <label for="zoomCheck-81ffa">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/pacu-aws-setup.webp"
      alt="Setting AWS keys in Pacu"
       />
  </label>
</p>
<h3 id="begin-exploitation">Begin Exploitation</h3>
<p>Before beginning exploitation, you can enumerate the IAM permissions using command <code>run iam__enum_permissions</code>. Now, I run command <code>run iam__privesc_scan</code>, you&rsquo;ll see output something like this:</p>
<p>
  
  <input type="checkbox" id="zoomCheck-cae88" hidden />
  <label for="zoomCheck-cae88">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/pacu-exploitation.webp"
      alt="Running privilege escalation in Pacu"
       />
  </label>
</p>
<p>You can see escalation method <code>PutGroupPolicy</code> and <code>PutUserPolicy</code> is used to attempt the privilege escalation. In the highlighted section, new administrator policy to the current user has been added with policy named <code>o7go7jwhnq</code>.</p>
<p>
  
  <input type="checkbox" id="zoomCheck-754c3" hidden />
  <label for="zoomCheck-754c3">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/pacu-aws-modified.webp"
      alt="AWS Permissions modified by pacu"
       />
  </label>
</p>
<blockquote>
<p>You can verify by running <code>run iam__enum_permissions</code> command in <code>pacu</code> terminal where you&rsquo;ll notice, objects with escalated admin permissions.</p></blockquote>
<h3 id="takeaways">Takeaways</h3>
<p>Pacu provides several commands for pen testers to enumerate, privilege escalate, reconnaissance, exfiltration, exploitation, and persistence on the given AWS account. In this activity, I used <code>iam__privesc_scan</code> which is a command designed to scan for and exploit privilege escalation vulnerabilities in AWS Identity and Access Management (IAM) policies. If the policy is weak or vulnerable, this command can look for multiple approach to escalate privilege to a current AWS user. This command can be used in penetration testing for following purposes:</p>
<ul>
<li>Identify Weak IAM Policies that can be potentially exploited for privilege escalation.</li>
<li>Demonstrate impact of weak policies by creating, modifying, and deleting AWS resources.</li>
<li>Assessing the Security Posture is a great advantage as it can help identify and highlight areas where IAM policies need to be improved.</li>
</ul>
<h2 id="prowler-assessment">Prowler Assessment</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">cd</span> prowler
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">./prowler.py aws -f us-east-2 -s <span class="o">{</span>s3,iam,cloudtrail,cloudwatch<span class="o">}</span> <span class="c1"># Run Prowler</span>
</span></span></code></pre></div><p>Here, I used <code>prowler</code> to scan for specific services like <code>S3</code>, <code>IAM</code>, <code>Cloudtrail</code>, <code>Cloudwatch</code>.</p>
<p>
  
  <input type="checkbox" id="zoomCheck-3245b" hidden />
  <label for="zoomCheck-3245b">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/prowler-output.webp"
      alt="Running Prowler"
       />
  </label>
</p>
<p>The output is summarized in the terminal or we can open the html file for detailed results in browser.</p>
<p>
  
  <input type="checkbox" id="zoomCheck-04c37" hidden />
  <label for="zoomCheck-04c37">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/prowler-detailed-output.webp"
      alt="Prowler scan, detailed output"
       />
  </label>
</p>
<p>
  
  <input type="checkbox" id="zoomCheck-596e6" hidden />
  <label for="zoomCheck-596e6">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/prowler-filtered-output.webp"
      alt="Prowler resulting custom policy as severity level of high"
       />
  </label>
</p>
<p>From the Prowler result the custom policy that we created is identified as vulnerable with high severity:</p>
<ul>
<li><em>Severity:</em> <strong>High</strong></li>
<li><em>Service Name:</em> <strong>IAM</strong> (Identity and Access Management)</li>
<li><em>Region:</em> <strong>us-east-2</strong></li>
<li><em>Check ID:</em> <strong>iam_policy_allows_privilege_escalation</strong></li>
<li><em>Check Title:</em> Ensure no Customer Managed IAM policies allow actions that may lead to Privilege Escalation</li>
<li><em>Resource ID:</em> Custom Policy arn:aws:iam::201368012826:policy/PacuExploitPolicy allows privilege escalation using the following actions: {&lsquo;iam:AttachRolePolicy&rsquo;}.</li>
<li><em>Status:</em> <strong>FAIL</strong></li>
<li><em>Risk:</em> Users with some IAM permissions are allowed to elevate their privileges up to administrator rights.</li>
<li><em>Associated with:</em> MITRE ATT&amp;CK and AWS Well-Architected Framework (Security Pillar)</li>
<li><em>Recommendations:</em>
<ul>
<li>Granting usage permission on a per-resource basis</li>
<li>Applying the least privilege principle.</li>
<li>The best practice is to review and adjust the polices to remove the risky permissions.</li>
<li>Regular auditing and assessment of IAM policies is also important to figure out the security posture.</li>
</ul>
</li>
</ul>
<h2 id="conclusion">Conclusion</h2>
<p>We covered three powerful open-source cloud assessment tools - ScoutSuite, Pacu and Prowler.</p>
<ul>
<li><strong>Scoutsuite</strong> allowed us to perform a comprehensive scan of AWS, identifying vulnerabilities, misconfigurations, and potential security risks.</li>
<li><strong>Pacu</strong> enabling us to simulate attacks and assess the security of our AWS environment from an attacker&rsquo;s perspective</li>
<li><strong>Prowler</strong> with more robust assessment by conducting security best practice checks and compliance checks based on industry standards.</li>
</ul>
<p>Furthermore, I demonstrated how a simple misconfiguration could be exploited using these Pacu to gain higher privilege access. By regularly conducting assessments and adhering to best practices when creating policies and configurations, we can improve our defenses and minimize the potential for such cloud security breaches.</p>
<h2 id="resources">Resources</h2>
<ul>
<li><a href="https://www.youtube.com/watch?v=IbqjtqTeyr0">AWS Pentesting (with pacu) by Cybr</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Learn Modern DevOps in the AWS Console</title>
      <link>http://localhost:1313/blogs/training/modern-devops-in-the-aws-console/</link>
      <pubDate>Thu, 26 Oct 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/training/modern-devops-in-the-aws-console/</guid>
      <description>AWS Builder Labs in AWS Console</description>
      <content:encoded><![CDATA[<h2 id="working-with-aws-codecommit-fundamental">Working with AWS CodeCommit (Fundamental)</h2>
<h3 id="overview---lab-1">Overview - Lab 1</h3>
<p>AWS CodeCommit is a highly scalable, managed source control service that hosts private Git repositories. CodeCommit stores your data in Amazon S3 and Amazon DynamoDB giving your repositories high scalability, availability, and durability. You simply create a repository to store your code.</p>
<p>This lab demonstrates how to:</p>
<ul>
<li>Create a code repository using AWS CodeCommit via the Amazon Management Console</li>
<li>Create a local code repository on the Linux instance running in EC2 using git</li>
<li>Synchronize a local repository with an AWS CodeCommit repository</li>
</ul>
<h3 id="lab-1-begins">Lab 1 Begins</h3>
<h4 id="creating-an-aws-codecommit-repository">Creating an AWS CodeCommit repository</h4>
<p>
  
  <input type="checkbox" id="zoomCheck-dff13" hidden />
  <label for="zoomCheck-dff13">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/codecommit.webp"
      alt="Creating repository in AWS CodeCommit"
       />
  </label>
</p>
<h4 id="connecting-to-aws-ec2-instance-using-aws-session-manager">Connecting to AWS EC2 Instance using AWS Session Manager</h4>
<p>
  
  <input type="checkbox" id="zoomCheck-db349" hidden />
  <label for="zoomCheck-db349">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/session-manager.webp"
      alt="Connecting to EC2 Instance using AWS Session Manager"
       />
  </label>
</p>
<h4 id="visualizing-the-instance-session-in-aws-session-manager">Visualizing the instance session in AWS Session Manager</h4>
<p>
  
  <input type="checkbox" id="zoomCheck-5ff1c" hidden />
  <label for="zoomCheck-5ff1c">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/session.webp"
      alt="Session in AWS Session Manager"
       />
  </label>
</p>
<h4 id="working-on-linux-local-repository-in-console-connection">Working on Linux local repository in Console Connection</h4>
<p>Configuring the Git credential helper with AWS credential profile, which allows Git credential helper to send the path to repositories.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git config --global credential.helper <span class="s1">&#39;!aws codecommit credential-helper $@&#39;</span>
</span></span><span class="line"><span class="cl">git config --global credential.UseHttpPath <span class="nb">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">git clone https://git-codecommit.us-east-1.amazonaws.com/v1/repos/My-Repo.
</span></span></code></pre></div><p>
  
  <input type="checkbox" id="zoomCheck-97a03" hidden />
  <label for="zoomCheck-97a03">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/console.webp"
      alt="Working on local repository in Console Connection"
       />
  </label>
</p>
<h4 id="pushed-changes-in-aws-codecommit-repository">Pushed Changes in AWS CodeCommit Repository</h4>
<p>
  
  <input type="checkbox" id="zoomCheck-c86ad" hidden />
  <label for="zoomCheck-c86ad">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/code-commit-changes.webp"
      alt="Pushed changes in AWS CodeCommit Repository"
       />
  </label>
</p>
<h2 id="auditing-your-security-with-aws-trusted-advisor-intermediate">Auditing Your Security with AWS Trusted Advisor (Intermediate)</h2>
<h3 id="overview---lab-2">Overview - Lab 2</h3>
<p>This lab guides you through the steps to audit your AWS resources to ensure your configuration complies with basic security best practices. This lab makes use of AWS Trusted Advisor as it applies to security. The topics covered include working with security groups, Multi-factor Authentication (MFA), and AWS Identity and Access Management (IAM).</p>
<blockquote>
<p>Note: AWS Security Model is <strong>shared responsibility</strong>, where both AWS and customers come together to achieve security objective. AWS provides controls that customer can use to secure cloud resources includes IAM, Amazon Virtual Private Clouds (VPCs), security groups, network ACLs and certificates.</p></blockquote>
<p>You will be able to do the following:</p>
<ul>
<li>Use Trusted Advisor to perform a basic audit of your AWS resources</li>
<li>Modify Amazon Elastic Compute Cloud (Amazon EC2) Security Groups to meet best practices</li>
<li>Configure Multi-factor Authentication (MFA) (Optional, requiring installation of software on a mobile device)</li>
</ul>
<h3 id="lab-2-begins">Lab 2 Begins</h3>
<h4 id="check-trusted-advisor-recommendations">Check Trusted Advisor Recommendations</h4>
<p>
  
  <input type="checkbox" id="zoomCheck-67899" hidden />
  <label for="zoomCheck-67899">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/check-recommendations.webp"
      alt="Check Trusted Advisor Recommendations"
       />
  </label>
</p>
<h4 id="security-group-with-unrestricted-ports">Security Group with unrestricted ports</h4>
<p>
  
  <input type="checkbox" id="zoomCheck-fe7e0" hidden />
  <label for="zoomCheck-fe7e0">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/unrestricted-port.webp"
      alt="Security Groups - Specific Ports Unrestricted"
       />
  </label>
</p>
<h4 id="editing-inbound-rules">Editing inbound rules</h4>
<h5 id="editing-tcp-inbound-rules">Editing TCP inbound rules</h5>
<p>The port (tcp/port 21) is unrestricted in the security group and is not currently needed and should be removed from the rules.</p>
<p>
  
  <input type="checkbox" id="zoomCheck-6cf9a" hidden />
  <label for="zoomCheck-6cf9a">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/editing-ftp-rules.webp"
      alt="Editing inbound rules"
       />
  </label>
</p>
<h5 id="modified-ftp-port-inbound-rule">Modified FTP port inbound rule</h5>
<p>
  
  <input type="checkbox" id="zoomCheck-f5d45" hidden />
  <label for="zoomCheck-f5d45">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/modified-ftp-rules.webp"
      alt="Modified FTP port inbound rule"
       />
  </label>
</p>
<h5 id="editing-mysql-inbound-rules">Editing MySQL inbound rules</h5>
<p>The rule is permitting incoming traffic to port <code>3306</code> from <code>0.0.0.0/0</code>, which means traffic will be permitted from <strong>any computer on the Internet</strong>.</p>
<p>
  
  <input type="checkbox" id="zoomCheck-1eb2c" hidden />
  <label for="zoomCheck-1eb2c">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/editing-mysql-rules.webp"
      alt="Editing MySQL inbound rule"
       />
  </label>
</p>
<h5 id="modified-mysql-inbound-rules">Modified MySQL inbound rules</h5>
<p>This rule now permits access to the RDS database only from members of the Web Security Group</p>
<p>
  
  <input type="checkbox" id="zoomCheck-5c73a" hidden />
  <label for="zoomCheck-5c73a">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/modified-mysql-rules.webp"
      alt="Modified MySQL inbound rules"
       />
  </label>
</p>
<h4 id="re-check-trusted-advisor-recommendations-result">Re-check Trusted Advisor Recommendations Result</h4>
<p>
  
  <input type="checkbox" id="zoomCheck-68931" hidden />
  <label for="zoomCheck-68931">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/recheck-recommendations.webp"
      alt="Rechecking Trusted Advisor Recommendations Result"
       />
  </label>
</p>
<blockquote>
<p>In some situations, you want to approve having ports open like <code>tcp/22</code> and <code>tcp/3389</code> this can be simple done by selecting <strong>Exclude &amp; Refresh</strong>.</p></blockquote>
<p>
  
  <input type="checkbox" id="zoomCheck-27740" hidden />
  <label for="zoomCheck-27740">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/recheck-after-exclude.webp"
      alt="After excluding and rechecking Recommendation"
       />
  </label>
</p>
<h4 id="setting-mfa-in-aws-iam-user">Setting MFA in AWS IAM user</h4>
<p>
  
  <input type="checkbox" id="zoomCheck-dd842" hidden />
  <label for="zoomCheck-dd842">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/setup-mfa.webp"
      alt="Setting MFA in AWS IAM user"
       />
  </label>
</p>
<h2 id="automate-application-testing-using-aws-codebuild-advanced">Automate Application Testing Using AWS CodeBuild (Advanced)</h2>
<h3 id="overview---lab-3">Overview - Lab 3</h3>
<p>Incorporating automated testing into your DevOps pipelines is crucial to increase speed and efficiency by ensuring that your application functions properly after every update.</p>
<p>This lab demonstrates how you can use AWS CodeBuild as a part of your Continuous Integration pipelines to test and build your code. You will be able to:</p>
<ul>
<li>Configure CodeBuild to perform application testing</li>
<li>Troubleshoot and fix CI/CD pipeline failures</li>
<li>Review CodeBuild reports and logs</li>
<li>Apply common code testing strategies</li>
<li>Describe the importance of robust test coverage</li>
</ul>
<h3 id="lab-3-begins">Lab 3 Begins</h3>
<h4 id="explore-application-in-aws-cloud9">Explore application in AWS Cloud9</h4>
<h5 id="browsing-cloud9">Browsing Cloud9</h5>
<p>
  
  <input type="checkbox" id="zoomCheck-dbf73" hidden />
  <label for="zoomCheck-dbf73">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/browsing-cloud9.webp"
      alt="Explore application in AWS Cloud9"
       />
  </label>
</p>
<h5 id="cloud9-development">Cloud9 Development</h5>
<p>
  
  <input type="checkbox" id="zoomCheck-19ce4" hidden />
  <label for="zoomCheck-19ce4">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/cloud9-development.webp"
      alt="AWS Cloud9 Development Environment"
       />
  </label>
</p>
<h5 id="previewing-application-in-cloud9">Previewing Application in Cloud9</h5>
<p>
  
  <input type="checkbox" id="zoomCheck-bfccf" hidden />
  <label for="zoomCheck-bfccf">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/preview-application.webp"
      alt="Previewing Application in Cloud9"
       />
  </label>
</p>
<h4 id="automating-testing-in-codebuild">Automating Testing in CodeBuild</h4>
<blockquote>
<p>The test result and failures will not be visible or easy to interpret, CodeBuild support to display test and coverage reports exported by framework in the reports section of <code>buildspec.yml</code>. CodeBuild supports the following formats: Cucumber JSON, JUnit XML, NUnit XML, NUnit3 XML, TestNG XML, and Visual Studio TRX. For code coverage reports, you can use the following formats: JaCoCo XML, SimpleCov JSON, Clover XML, and Cobertura XML.</p></blockquote>
<h5 id="adding-ci-step-and-redirecting-to-reports">Adding CI step and redirecting to reports</h5>
<p>
  
  <input type="checkbox" id="zoomCheck-dfce4" hidden />
  <label for="zoomCheck-dfce4">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/codebuild-testing.webp"
      alt="Automating Testing in CodeBuild"
       />
  </label>
</p>
<h5 id="pushing-changes-to-codecommit">Pushing changes to CodeCommit</h5>
<p>
  
  <input type="checkbox" id="zoomCheck-50261" hidden />
  <label for="zoomCheck-50261">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/pushing-changes.webp"
      alt="Commit and pushing changes"
       />
  </label>
</p>
<h4 id="review-build-pipeline">Review Build Pipeline</h4>
<h5 id="failed-codepipeline-of-web-application">Failed CodePipeline of Web Application</h5>
<p>
  
  <input type="checkbox" id="zoomCheck-4b582" hidden />
  <label for="zoomCheck-4b582">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/failed-pipeline.webp"
      alt="Failed CodePipeline of web application"
       />
  </label>
</p>
<h5 id="command-execution-error">Command Execution Error</h5>
<p>
  
  <input type="checkbox" id="zoomCheck-bbe35" hidden />
  <label for="zoomCheck-bbe35">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/command-execution-error.webp"
      alt="COMMAND_EXECUTION_ERROR"
       />
  </label>
</p>
<h5 id="pushing-the-fix-detected-by-automated-tests">Pushing the fix detected by Automated Tests</h5>
<p>
  
  <input type="checkbox" id="zoomCheck-c87ee" hidden />
  <label for="zoomCheck-c87ee">
    <img
      class="zoomCheck"
      loading="lazy"
      decoding="async"
      src="img/fixing-code.webp"
      alt="Fixing code issues and pushing changes"
       />
  </label>
</p>
<blockquote>
<p>Error: This build was not successful due to following error.</p></blockquote>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"> /codebuild/output/src2610253420/src/react-app/node_modules/@adobe/
</span></span><span class="line"><span class="cl"> css-tools/dist/index.cjs:118
</span></span><span class="line"><span class="cl">  <span class="o">}</span>, options?.source <span class="o">||</span> <span class="s2">&#34;&#34;</span><span class="o">)</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">              ^
</span></span><span class="line"><span class="cl">SyntaxError: Unexpected token <span class="s1">&#39;.&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">at Runtime.createScriptFromCode <span class="o">(</span>node_modules/jest-runtime/build/index.js:1350:14<span class="o">)</span>
</span></span><span class="line"><span class="cl">at Object.&lt;anonymous&gt; <span class="o">(</span>node_modules/@testing-library/jest-dom/dist/utils.js:21:17<span class="o">)</span>
</span></span></code></pre></div>]]></content:encoded>
    </item>
  </channel>
</rss>
